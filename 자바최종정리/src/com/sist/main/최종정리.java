package com.sist.main;
/*
 * 	프로그램의 구성
 * 	------
 * 	# 데이터 저장 => 메모리 / 파일 / 데이터베이스(오라클)
 *                      ---------------------> 자바에서 제어가 불가능
 *                 |
 *                자바에서는 파일/데이터베이스에서 읽은 데이터를 메모리에 저장 후에 관리
 *                
 *  # 자바에서 사용하는 용어
 *  변수 / 상수 => 한개의 데이터를 저장하는 공간
 *  	=> 변수 : 변경이 가능 / 상수 : 변경이 불가능 (final 사용)
 *  	=> 저장 공간의 크기 (데이터형)
 * 		---------------------------------------------------------------------------
 *  	정수
 * 		byte (1byte) : -128~127 => overflow
 * 			=> 웹 (파일 업로드 / 파일 다운로드), application (네트워크 전송)
 * 			=> 웹 : WebSocket
 * 			=> application : 채팅/쪽지 보내기 => Socket
 * 		int (4byte) : 프로그램에서 사용하는 모든 정수는 int를 인식한다 => -21억4천~21억4천
 * 		long (8byte) : 금융권 / 공기업 / 빅데이터 / AI
 * 			=> 오라클에서 보내준 데이터를 받는 경우 => NUMBER NUMBER(4) => int
 *		---------------------------------------------------------------------------
 * 		실수
 * 		double (8byte) : 일반적인 실수를 저장할 때 사용하는 공간 => NUMBER(7,2) => double
 * 		---------------------------------------------------------------------------
 * 		문자/문자열
 * 		String : 웹, 윈도우 => 가장 많이 사용되는 데이터형
 * 		오라클에는 존재하지 않는다 (CHAR, NUMBER)	
 *		---------------------------------------------------------------------------
 *		논리형
 *		boolean (1byte) : true/false 
 *		---------------------------------------------------------------------------
 *
 * 	# 오라클 컬럼과 매칭
 *      EMPNO     NOT NULL NUMBER(4)     ===> int empno (사번)
 *      ENAME              VARCHAR2(10)  ===> String ename (이름)
 *      JOB                VARCHAR2(9)   ===> String job (직위)
 *      MGR                NUMBER(4)     ===> int mgr (사수 번호)
 *      HIREDATE           DATE          ===> Date hiredate (입시일)
 *      SAL                NUMBER(7,2)   ===> double sal (급여)
 *      COMM               NUMBER(7,2)   ===> double comm (성과급)
 *      DEPINO             NUMBER(2)     ===> int deptno (부서 번호)
 * 		=================================================================
 * 		숫자형 (NUMBER => int, double)
 * 		문자형 (CHAR/VARCHAR2/CLOB => String)
 * 			CHAR : 1~2000, VARCHAR2 : 1~4000, CLOB : 4기가
 * 			*** 한글 한글자당 3byte
 * 		날짜형 (DATE => java.util.Date)
 * 
 * 	# 웹에 출력된 데이터 : 데이터 추출 (데이터형)
 * 		*** 변수 / 클래스 / 배열 => 난발하면 프로그램을 짜기 어렵다 => 한개의 이름으로 제어 => 모음
 * 
 *  # 데이터가 많은 경우에 데이터를 모아서 관리
 *  	=> 묶어서 사용 : 반복문 사용 => 소스를 간결하게 만든다
 *  	int a~z => 26개의 변수 설정 => 가장 큰값, 작은값 출력 => if문 25개 작은 25개 => 50개의 if문 사용
 *  	=> 같은 데이터형을 묶어서 한개의 이름으로 제어
 *  		=> 배열 (구분자 : 인덱스) => 개수 지정
 *  		데이터형[] 배열명=new 데이터형[개수]
 *  	=> 다른 데이터형이 여러개 존재 => 한개의 이름으로 제어
 *  		=> 클래스 (구분자 : 메모리 주소값 => 객체) => new 생성자() => 따로 저장된다
 *  		=> 한개의 이름으로 모아서 관리 : 인터페이스, 컬렉션
 *  	*** 정수 n개 => 배열
 *  	*** 클래스 n개 => 컬렉션 : 배열의 단점을 보완
 *  
 *  # 변수의 종류
 *  
 *  --- 메소드에서만 사용 가능 ----------------------------------------
 *  1. 지역 변수 : 메소드 안에 선언되는 변수 => 루프 변수, 결과값을 전송하는 변수
 *  2. 매개 변수 : 사용자가 보내준 요청 (사용자가 요청값)
 *  	=> 3개 이상 초과하지 않는다 (배열, 클래스)
 *  --- 프로그램 종료 시까지 사용 가능 (다른 클래스에서도 사용 가능 )------------
 *  3. 인스턴스 변수 : 메모리 공간이 따로 생기는 공간 => new 사용 시마다 생성
 * 	4. 공유 변수 (정적 변수) : 모든 객체가 공통으로 사용 가능 => 한개의 메모리 생성
 * 	-------------------------------------------------------------
 * 
 * 	===> 자바에서 지원하는 메모리 공간
 * 
 * 	--- Method Area --------------------------------
 * 	Method가 저장 (Method는 메소드명이 주소)
 * 	공유 변수 (static)
 * 	--- Stack --------------------------------------
 * 	메모리 자체 관리 => {}이 끝나면 자동으로 회수
 * 	지역 변수 / 매개 변수
 * 	--- Heap ---------------------------------------
 * 	인스턴스 변수 => new
 * 	클래스 / 배열
 * 	프로그래머가 관리 => 메모리 해제 (객체가 null인 경우, 사용하지 않는 변수) => GC
 * 		new => delete
 * 		malloc() => free()
 * 		=> 자동 메모리 회수기를 이용한다 (가비지 컬렉션)
 * 	------------------------------------------------
 * 	
 * 	# 사용자 요청에 따라 제어
 * 	1) 연산자
 * 	2) 제어문
 * 	=> 묶기 시작 => 한개의 이름으로 제어 => 소스가 간결, 유지 보수가 편리
 * 		=> 관련된 명령문을 묶어서 사용 : 메소드 => 재사용 / 반복 제거 / 에러나 기능을 편리하게 추가
 * 		=> 메소드 + 변수 묶어서 사용 : 클래스
 * 		=> 만들지 못하는 기능 : 라이브러리 (자바에서 클래스를 지원)
 * 	=> 다른 프로그램과 연동
 * 		1. 오라클 연동 => 오라클 명령어 사용법 => JDBC
 * 		2. 브라우저 연동 => HTML / CSS => JSP => 웹 사이트가 제작
 * 
 *      ---------------------------------------------
 *               요청        요청된 데이터를 보내달라
 * 	    브라우저 -------- 자바 -------------------- 오라클
 *             화면 출력       응답 데이터를 보내준다
 *      --------------------------------------------- 통합 (스프링)
 */
public class 최종정리 {

}
