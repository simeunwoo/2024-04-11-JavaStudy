/*
 * 	프로그램 형식
 * 	1) 평문 : 순차적으로 처리 => 연산자
 * 	2) 조건문 (선택문) => 필요에 따라서 건너뛸 수 있다 => 프로그램에 맞게 수행이 가능
 * 		=> 로그인, 아이디 찾기, 검색, 상세보기
 * 		=> 종류
 * 		   1. 단일 조건문
 * 				=> 형식
 * 				   if(조건문) => 조건(true/false) => 부정연산자/논리연산자/비교연산자
 * 				   {
 * 						조건이 true일 경우에만 수행 문장
 * 				   }
 * 				   => 부정연산자(!) => 반대 효과
 * 				   => 논리연산자 => 조건이 2개인 경우
 * 				   id가 같고 비밀번호가 같은 경우 => &&, || (논리연산자)
 * 				   => 비교연산자 (==,!=,<,>,<=,>=)
 * 				   프로그램 : 라이브러리 사용 / 데이터베이스 (오라클) => 데이터 처리
 * 				   ------------------------------------------------
 * 					사용자가 요청한 데이터만 읽기 => 출력
 * 					---------------------
 * 						ㅣ 조건 => 사용자 요청 / 처리 결과물 => 사용자 중심의 프로그램
 * 						ㅣ 요구 사항 분석 => 필요한 데이터 저장 (데이터베이스)
 * 						  ------- 아키텍처 ---------- DBA
 * 							=> 화면 UI => 구현 (자바) => 테스트 => 배포
 * 						 퍼블리셔 ------   ---------	 ---- 테스터
 * 										 웹프로그래머(서버/클라이언트)
 * 		   2. 선택 조건문 => true/false를 나눠서 처리
 * 		   3. 다중 조건문 => 여러개의 조건 중에서 1개만 처리
 * 		   4. 선택문 => 값 1개만 선택해서 처리 => 메뉴, 키보드 (게임)
 * 	3) 반복문 => 같은 코딩이 여러번 나오는 경우
 * 		=> 목록 출력, 검색 결과
 */
public class 제어문_조건문_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
	//	for(int i=1;i<=100;i++) // 1, 2, 3,...100
	//	{
	//		if(i%2==0)
	//			System.out.println(i); // 2(다음줄)4(다음줄)6...98(다음줄)100
	//	}
		
		int a=100;
		int b=20;
		
		int max=0;
		int min=100;
		
		if(max<a);
			max=a; // max=100
		if(max<b);
			max=b; // max=20
			
		if(min>a);
			min=a;
		if(min>b);
			min=b; // min=20
			
		System.out.println("max="+max); // max=20
		System.out.println("min="+min); // min=20
		
		System.out.println("max="+Math.max(a, b)); // max=100
		System.out.println("min="+Math.min(a, b)); // min=20
	}

}
