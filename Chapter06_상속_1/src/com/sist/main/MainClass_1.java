package com.sist.main;
/*
 * 	5장
 * 	118page => 클래스 구조
 * 		=> [접근지정어] [제어어] class ClassName
 * 			{
 * 			}
 * 		접근지정어 : public => 한개의 파일에 클래스를 여러개 만드는 경우 => public은 한번만 사용 가능
 * 							가급적이면 한개의 자바 파일에 여러개의 클래스를 만들지 않는다 (그래야 나중에 관리에 용이)
 * 		제어어 : 대부분은 default
 * 				static : 공통으로 사용되는 기능 => 네트워크 (client/server) : 동시에 사용되는 클래스, 데이터 분석
 * 				abstract : 추상 클래스 (선언만된 메소드) => 미완성된 클래스 (메모리 할당을 할 수 없다)
 * 							=> 상속 받은 후 구현 후 사용 (상속, 오버라이딩) => 7장
 * 				final : 종단 클래스 => 확장할 수 없는 클래스 (사용 빈도가 거의 없다) => String, StringBuffer, System, Math, Wrapper ...
 * 		{
 * 			<선택 사항>
 * 			----------------------------------
 * 			변수 (멤버 변수)
 * 			=> 저장해서 관리할 데이터를 메모리에 저장할 목적 (프로그램 종료 시까지 메모리 유지)
 * 			=> 따로 저장되는 공간 : 인스턴스 변수 => new를 이용하여 메모리 공간을 만들고 저장 후 사용
 * 				= 핵심
 * 			=> 1개만 저장되는 공간 : 정적 변수 => static
 * 			=> 변수로 사용할 수 있는 것
 * 				1. 기본형 (정수, 실수, 문자, 논리)
 * 				2. 배열
 * 				3. 클래스 => 포함 클래스 => 데이터형 (사용자 정의) ex) String, Movie[] movies=new Movie[1938];
 * 			=> 변수는 외부에서 (다른 클래스에서 변경할 수 없게 보호)
 * 				= 캡슐화 : 변수는 은닉화 / 메소드를 통하여 접근 가능 => getter/setter (읽기/쓰기) => 기능 추가
 * 				= 설정하는 변수는 private
 * 			1. 출력 화면을 보고 데이터 추출 ******* => 안보이는 데이터 => 클래스의 변수 (찾기=>구분자가 반드시 포함)
 * 											=> 게시물 번호 / 영화 번호 / 배열의 인덱스와 매칭
 * 			2. 캡슐화 => 시큐어 코딩의 기본
 * 			------------------------ => lombok
 * 			----------------------------------
 * 			생성자 : 초기화 => 배열에 값을 채워준다 (파일 읽기, 오라클 연결)
 * 					*** 클래스 블록은 선언만 가능
 * 					*** 선언
 * 						= 변수 선언 => int a;
 * 						= 메소드 선언 => public void display();
 * 			초기화 블록에서 구현 후 초기화
 * 
 * 			*** 인스턴스 변수에 대한 초기화 => 생성자 : 사용하기 위해서는 생성자가 반드시 호출
 * 					클래스명 객체명=new 생성자()
 * 					객체명.변수명
 * 			*** 정적(static) 변수에 대한 초기화 => static{} =>생성자 호출이 없어도 사용 가능
 * 					클래스명.변수명
 * 
 * 			=> 접근지정어는 public (다른 클래스에서 사용이 가능하기 때문)
 * 			=> 클래스명과 동일
 * 			=> 리턴형이 없다
 * 			=> 여러개를 만들 수 있다 : 같은 메소드명으로 여러개 생성하여 사용 => 오버로딩
 * 			=> 모든 클래스에 한개 이상 존재 => 사용하지 않는 경우에는 생략 가능 => 컴파일러가 생성자 1개 지원 : 매개 변수가 없는 생성자 (디폴트 생성자)
 * 			----------------------------------
 * 			메소드
 * 			----------------------------------
 * 		}
 * 	122page => 객체 생성
 * 	123page => 객체 사용
 * 	127page => 접근지정어
 * 	132page => 패키지
 * 	136page => import
 * 	140page => 메소드
 * 	152page => getter/setter
 * 	166page => 생성자
 * 
 * 	6장
 * 	194page => 상속 (웹에서는 사용 빈도가 거의 없다)
 * 	201page => 단일 상속, 오버라이딩
 * 	207page => 상속 시 접근 제한 => 캡슐화가 깨지는 경향
 * 	211page => 상속 시 생성자
 * 	215page => 키워드 (super / this)
 * 	221page => 객체 형변환
 * 
 * 	7장
 * 	=> 인터페이스
 * 	
 * 	8장
 * 	=> 예외 처리
 * 		= 직접 처리 => try~catch
 * 		= 간접 처리 => throws Exception
 * 	--------------------------------------------- 자바 기본 형식 (문법)
 * 	9장 ~ : 라이브러리 (필요한 메소드)
 * 			Math => random() / ceil()
 */
public class MainClass_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
