package com.sist.dao;
/*
 *  DQL / DML 수행 => DDL, DCL, TCL : 오라클에서 작업
 *  ----------                ----
 *  DQL / DML
 *  => 프로그램 : 데이터 관리 => CRUD (SELECT / INSERT / UPDATE / DELETE)
 *  TCL
 *  => 오라클 명령어로 사용하는 것이 아니다 => 메소드 (commit(), rollback())
 *  => 설정이 없으면 AutoCommit()
 *  
 *	----------------------------------------------------------------------
 *
 *  1. DQL (Data Query Language) : 데이터 검색 (SELECT)
 *  
 *  자바 ===SQL 문장===> 오라클
 *  	----------> 오라클 문법에 맞춘다
 *  
 *  SELECT
 *  형식)
 *  	SELECT * | column1,column2...
 *      FROM table_name | view_name | (SELECT ~)
 *                                    -------------
 *                                    1. 페이지 나누기
 *                                    2. 인기 순위
 *                                    ------------- rownum (가상 컬럼 => INSERT마다 번호를 자동 지정)
 *                                                  => 1번부터 => 인라인뷰
 *		[
 *			WHERE 조건문 (연산자) => 컬럼(함수) 연산자 값(직접대입,사용자입력값,(SELECT~)=>뷰)
 *			GROUP BY 그룹컬럼(함수) => 관리자 => 통계 (지정된 그룹 별로 따로 설정)
 *          HAVING 그룹조건 => 반드시 GROUP BY를 동반
 *                 ------ 집합 함수 (COUNT, AVG, SUM)
 *          ORDER BY 컬럼(함수) (ASC|DESC)
 *           => 처리하는 속도가 늦다 => INDEX
 *		]
 *
 *	=> 1) 형식 => 화면 설계
 *	=> 2) 연산자 (조건에 맞는 데이터 추출)
 *	=> 3) 내장 함수
 *	=> 4) 정렬 => 최신 데이터를 먼저 출력 => DESC
 *
 *	----------------------------------------------------------------------
 *
 *	2. DML (Data Manipulation Language) : 데이터 조작 언어
 *
 *	INSERT => 데이터 저장
 *	형식)
 *		1. 컬럼 전체에 값을 저장
 *		INSERT INTO table_name VALUES(값...)
 *			숫자 : 10, 20 ...
 *			문자 : ''
 *			날짜 : SYSDATE (현재 날짜), 'YY/MM/DD'
 *		2. 원하는 컬럼에만 값 저장
 *		INSERT INTO table_name(컬럼명,컬럼명...) VALUES(값...)
 *			=> 컬럼에 null값 허용 / default가 있는 경우
 *
 *	UPDATE => 데이터 수정
 *	형식)
 *		UPDATE table_name SET
 *		컬럼명=값, 컬럼명=값 ...
 *		[WHERE 조건문]
 *
 *	DELETE => 데이터 삭제
 *	형식)
 *		DELETE FROM table_name
 *		[WHERE 조건문]
 *
 *	= 주의점
 *	문자열 => ""
 *	-------------- 1) 공백, 2) '', 3) ; 를 사용하면 오류 => 자동으로 ;를 붙여준다
 *	-------------- AutoCommit() => 잘못된 데이터가 저장 => 복구할 수 없다
 *	---> 조인 / 서브쿼리 / NULL값 처리 => NVL()
 *	---> '' => NULL / ' ' => NULL이 아니다 (띄어쓰기를 할 경우)
 *	---> String sql="SELECT "+"FROM "+"WHERE ~"; => 욕 쳐 먹음 (가독성 최악) => 줄을 나누던지, +를 없애고 합치던지
 */
// 1. 목록 : 번호 / 제목 / 이름 / 작성일 / 조회수
/*
 * 	게시판 => 흐름 (웹 : 로직(X), 데이터베이스 연동 => 이동)
 * 
 *                목록                             상세보기
 *                 |                                |
 *    		---------------               -----------------------------
 *          |             |               |                  |        |
 *        글쓰기          상세보기=>이동       수정                삭제       목록=>목록이동
 *          |                             |                  |
 *         완료=>목록이동                    완료=>상세보기         완료=>목록
 *         
 *  => VO / DAO / Service / Config
 *     ---------  ------- Open API
 *     장점 : 윈도우 / 모바일 => 웹 => 상관 없이 소스가 동일 (필요하면 언제든지 사용 가능)
 */
public class BoardDAO {

}
