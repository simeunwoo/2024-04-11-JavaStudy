/*
 *	변수 : 한개의 데이터를 저장하는 메모리 공간의 이름 (필요시에는 변경이 가능)
 *
 * 	메모리 공간 => 4byte씩 나눠진다
 * 
 * 		0---------------
 * 			사용중
 * 		4---------------
 * 			사용중
 * 		8---------------
 * 			 10 	-------- 별칭 a
 * 		12--------------
 * 
 * 		16--------------
 * 
 * 	1) 변수 명칭법
 * 		1. 알파벳이나 한글로 시작
 * 		   알파벳 사용시 대소문자를 구분 (a / A)
 * 		2. 숫자 사용이 가능 (앞에 사용할 수 없다)
 * 		   a1, a2 ...
 * 		3. 특수문자 사용이 가능 (_ , $) => 단어가 2개 => file_name
 * 		   _name : 임시 변수
 * 		4. 키워드는 사용할 수 없다 (자바에서 이미 사용 중인 단어 = 예악어)(빨간색 단어는 이미 사용 중임)
 * 		5. 공백이 있으면 안된다 (a b => 안됨)
 * 		6. 변수명에 대한 제한이 없다 (보통 3~10글자 정도가 적당 => 압축)
 * 		   ex) 국어점수 : a => kor
 * 
 * 		kor=89 (kor이라는 공간에 89의 값이 저장됨)
 * 		kor : 변수 => 다음에 다시 사용
 * 		89 : 실제 저장된 값(메모리) => 리터럴
 * 
 *     	변수의 형식)
 *     		데이터형 변수명 = 실제 메모리에 저장된 값
 *     		----------------
 *     		ㅣ 메모리 크기
 *     
 *     		데이터형 (사용범위, 메모리 크기)
 *     			[byte : 메모리 공간을 절약 => 속도 (대부분은 int를 사용)]
 *     		-------
 *     		정수
 *       *** 1byte => byte => 파일읽기 / 업로드 / 다운로드 / 네트워크 전송 (-128~127 가능, 그 외는 범위를 벗어나 overflow => 오류)
 *           2byte => short => 사용빈도는 거의 없다 (언어와 호환성)
 *       *** 4byte => int => default=기본값 (컴퓨터는 무조건 숫자를 int로 인식)
 *       *** 8byte => long => 금융권에서 주로 사용
 *     			ex) 10 => (int) / 10L(1) => (long) (단 int의 범위를 벗어나지 않은 수라면 뒤에 L 안붙여도 됨)
 *     			
 *     		-> 컴퓨터에 저장
 *     			----- 0,1
 *     			1byte => 8bit(0,1=>8로 저장)
 *     			--------------------------
 *     				부호비트(0=>양수, 1=>음수) 1 1 1 1 1 1 1
 *     		실수
 *     		 4byte
 *     		 8byte
 *     		문자
 *     		 2byte
 *     		논리
 *     		 1byte
 *     
 *     		데이터를 저장해서 재사용 => 변수 (한개만 저장이 가능)
 *     		정수
 *     		 byte => 1byte (-128~127)
 *     		 short => 2byte (-32768~32767)
 *     		 int => 4byte (-21억 4천~21억 4천)
 *     		 long => 8byte => 64bit(0과1이 64개 저장됨)
 */
public class 변수_1 {
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//byte b1=-128;
		//System.out.println(b1);
		//b1=100;
		//long a=2100;
		//int b=(short)21000;
		// 문제. 국어 영어 수학 점수 총점을 계산
		int kor=90;
		// 4byte 메모리 공간을 만들어서 => kor이름으로 90을 저장한다
		int eng=80;
		int math=70;
		//		  --- 초기값
		// 초기값을 부여하는 방법
		/* 1. 명시적 초기화
		 * int a=100;
		 * 2. 난수 발생 => 임의로 숫자를 추출 => 게임
		 * 3. 사용자로부터 값을 받아서 초기화
		 * 초기값 없이 사용하면 오류가 난다
		 */
		int total=0;
		System.out.println(total);
		System.out.println(kor+eng+math);
		/*
		 *  변수
		 *  ---
		 * 	 1. 지역변수 : 반드시 초기화를 해서 사용
		 * 	 ------------------------------
		 * 	 초기화 (28page)
		 * 		1) 선언과 동시에 초기값 부여
		 * 			int a=10;
		 * 		2) 선언을 먼저, 나중에 값을 대입
		 * 			int a;
		 * 			a=10
		 * 		3) 여러개를 동시에 선언
		 * 			int a=10;
		 * 			int b=20;
		 * 			int c=30;
		 * 
		 * 			int a,b,c; (int는 int끼리 동일하게, long, ... 등도 마찬가지)
		 * 			a=b=c=10;
		 * 
		 * 			int a=10,b=10,c=10;
		 * 	 2. 멤버변수
		 * 	 3. 공유변수
		 * 	 4. 참조변수
		 * 
		 * 	30page
		 * 	논리형 => boolean => 저장하는 값 => true/false (로그인에 주로 사용)
		 * 	1byte => true=1,false=0
		 * 	=> 사용하는 위치는 조건을 사용할 때
		 *  => 형식) boolean bCheck=false;
		 */
		boolean bCheck=false;
		System.out.println(bCheck);
		/*
		 * 	문자형
		 *  => char : 멀티바이트 => 2byte => 0~65535(2의16승-16bit니까) => UniCode
		 * 	----
		 * 	 ㅣ C언어 => 싱글바이트 => 1byte => 0~255(2의8승-8bit니까) => ASC
		 * 	 => 각 문자마다 번호를 부여 (ASC)
		 * 	 => A => 65
		 * 	 => a => 97
		 * 	 => '0' => 48
		 * 	 => 표현 방식 => 문자 1개 => ''
		 */
		char hakjum='B';
		System.out.println(hakjum);
		char fname='홍';
		System.out.println(fname);
		char num='0';
		System.out.println((int)num);
	}

}
