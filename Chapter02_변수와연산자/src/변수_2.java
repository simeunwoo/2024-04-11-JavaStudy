/* (필수 암기 - 변수 선언, 식별자, 데이터형)
 *  1. 변수 선언 (27page)
 *  	1) 변수 : 한개의 데이터를 저장하는 메모리 공간의 이름 ----- 주소, 방 느낌 => 저장한 데이터를 읽기/쓰기
 *  															 => 데이터 변경이 가능
 *  	2) 상수 : 한개의 데이터를 저장하는 메모리 공간의 이름 				 => 데이터 변경이 불가능 (상수 = 항상 같은 수)
 *  	
 *  	# 변수와 상수의 구분은 final
 *  	--- 데이터형 변수명 = 값 (변경 가능)
 *  	--- final 데이터형 상수명 = 고정값 (변경 불가)
 *  	3) 리터럴 : 실제 저장된 값 (메모리)
 *  
 *  2. 변수 명칭법 => 식별자(구분자) => 같은 곳에서 같은 이름의 변수는 사용이 불가능 => ex) int a=10,a=20; (불가능)
 *  	(26page)															ex) int a=10;
 *  																	int a=20;      (불가능)
 *  																ex) int a=10;
 *  																	a=20;		   (가능)
 *  	=> 알파벳, 한글로 시작 => ex) int 국어,영어,수학 / int kor,eng,math,Kor
 *  		(대소문자 구분)
 *  	=> 숫자 사용 (뒤에 사용이 가능) => ex) int kor1,kor2,kor3,...
 *  	=> 키워드는 사용할 수 없다 => 키워드 : int, byte, long, boolean, char,...
 *  							ex) int char (불가능) / int char1 (가능)
 *  	=> 공백이 있으면 안된다 => ex) int a b (불가능)
 *  	=> 특수문자는 사용이 가능 (위치는 상관없다) => _, $,... => _가 앞에 있는 경우는 임시변수 => _temp => 정렬
 *  	=> 클래스, 변수, 상수, 메소드, 인터페이스, 추상클래스, 배열,...
 *  
 *  3. 데이터형(타입), 기본형
 *  	(30page)
 *  	형식)
 *  		데이터타입 변수명;
 *  		------- 정수,실수,문자,논리
 *  		-------------------------------------------
 *  		정수형
 *  		-------------------------------------------
 *  		실수형
 *  		-------------------------------------------
 *  		문자형
 *  		-------------------------------------------
 *  		논리형
 *  		-------------------------------------------
 *  		참조형 : 데이터를 여러개 한번에 저장하는 방법 (배열/클래스)
 *  
 *  4. 각 데이터형별 사용법
 *  
 *  5. 연산처리 => 제어
 */
public class 변수_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
