package com.sist.main;
/*
 * 	# 클래스의 구성 : 데이터 + 기능
 * 		데이터 : 멤버변수 : 초기화 (값을 지정) : 생성자, 초기화 블록
 * 			=> 클래스에서는 다른 데이터형을 모아서 관리/전송 (브라우저, 윈도우) => 한번에 모아서 전송
 * 			= 인스턴스변수 : new를 사용할 때마다 메모리에 따로 저장되는 변수, 다른 클래스에서도 연결해서 사용 가능, 자동으로 기본 초기화
 * 			= 정적변수 : 컴파일러에 의하여 자동으로 저장 => 메모리 공간 1개 (모든 클래스에서 공유), 다른 클래스에서도 연결해서 사용 가능, 자동으로 기본 초기화
 * 				=> 인스턴스변수, 정적변수 : 프로그램 종료 시까지 유지
 * 			= 지역변수 : 메소드 안에서만 사용 가능한 변수, 변수의 초기화가 없다 (반드시 초기화 후에 사용)
 * 				=> 지역변수, 매개변수, 루프변수, 임시변수 : 메소드가 종료되면 자동으로 사라지는 변수
 * 		기능 : 멤버메소드
 * 
 * 		객체 생성 시 호출해야되는 멤소드 : 생성자 (필요 시에 사용)
 * 		*** 멤버변수, 정적변수, 메소드, 생성자 => 필요한 것만 골라서 사용 가능 (구성 요소는 다 필요한 것이 아니다)
 * 			=> ex) 변수 / 메소드 / 변수+메소드 / 변수+생성자 / 변수+메소드+생성자
 * 		생성자는 변수에 대한 초기화, 생성자는 시작과 동시에 동작하는 내용 : 화면 UI, 웹 (데이터베이스 연결, 자동 로그인, 쿠키 읽기, 권한 부여)
 * 		생성자 : 여러개 사용이 가능, 없는 경우 => 자동으로 컴파일러가 첨부 : 매개변수가 없는 생성자 (디폴트 생성자)
 * 		=> 상속의 예외 조건
 * 		=> 클래스명과 동일
 * 		=> 리턴형이 없다
 * 		=> 객체 생성 시에 호출되는 메소드
 * 		=> 다른 클래스에서도 사용 가능 : public 활용
 * 		=> 여러개가 있는 경우 : 오버로딩 (중복 함수 정의) => 같은 이름의 메소드를 여러개 생성
 * 		
 * 		오버로딩
 * 		=> 메소드 동일
 * 		=> 매개변수의 갯수나 데이터형이 다르다
 * 		=> 리턴형은 관계 없다
 * 		=> 접근지정어는 관계 없다
 */
public class MainClass_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
