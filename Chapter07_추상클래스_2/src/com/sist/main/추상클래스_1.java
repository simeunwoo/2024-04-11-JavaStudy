package com.sist.main;
/*
 * 	일반 클래스
 * 	= 구성 요소
 * 	{
 * 		-------------------
 * 		변수
 * 		=> 따로 저장 변수 : 인스턴스 => 새로운 메모리 공간을 만들어서 저장 : new 사용
 * 		=> 한개를 가지고 사용하는 변수 => static
 * 		-------------------
 * 		생성자 : 변수에 대한 초기화
 * 				윈도우 / 웹 / 데이터베이스 : 시작과 동시에 처리
 * 				화면 UI / 자동 로그인, 쿠키 / 드라이버 등록
 * 		=> 반드시 필요하다 : 메모리 저장 시에 호출
 * 						=> 없는 경우에는 컴파일러에 의하여 자동으로 추가
 * 			필요 없는 경우에는 생략할 수 있다
 * 		=> 여러개를 만들 수 있다
 * 			=> 디폴트 생성자 : 매개 변수가 없는 생성자
 * 			=> 매개 변수가 있는 생성자 => 사용자로부터 초기값을 받아서 저장
 * 			=> 클래스 내에서 생성자를 호출할 때는 this()를 이용한다 => 생성자 내에서만 호출 가능 => 한번만 호출 / 첫줄에 사용
 * 			=> super()는 상속을 받은 경우에 사용
 * 			=> 자동 처리 => 컴파일러에 처리
 * 			1. 모든 클래스는 Object 상속을 받는다 => Object 상속을 생략할 수 있다
 * 				public class A extends Object
 * 				=> Object에서 제공하는 모든 기능 사용이 가능
 * 					=> 객체 비교 : equals()
 * 					=> 소멸자 : finalize()
 * 					=> 복제 : clone()
 * 					=> 주소 출력 : toString()
 * 			2. import가 생략
 * 				import java.lang.*;
 * 					   ~~~~~~~~~~~ String, Math, System ...
 * 			3. 메소드
 * 				void => return을 생략하면 => 자동으로 추가
 * 			4. 상속
 * 				class A
 * 				{
 * 				}
 * 				class B extends A
 * 				{
 * 					public B(){
 * 						super() // 생략 가능
 * 					}
 * 				}
 * 		-------------------
 * 		-------------------
 * 	}
 * 
 * 	추상 클래스 : 사용자 정의는 거의 없다 => 확장된 개념 (인터페이스)
 * 				=> 라이브러리에 추상 클래스가 많이 존재
 * 				   ------- 상속 => 오버라이딩을 하는 이유
 */

class A
{
	
}
class B extends A
{

	public B() {
		super();
	}
	
}

public class 추상클래스_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
