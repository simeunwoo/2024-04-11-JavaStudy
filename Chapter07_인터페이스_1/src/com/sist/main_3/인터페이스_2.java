package com.sist.main_3;
/*
 * 	1. 클래스 구성 요소
 * 	변수 : 기본형, 배열, 클래스
 * 	메소드 => 연산자/제어문
 * 
 * 	2. 클래스 연결 => 인터페이스
 * 
 * 	3. 프로그램 종료 방지 => 예외 처리 : 사용자가 입력값을 잘못 넘겨준 경우 처리 => 웹
 * 	=> 못만드는 클래스가 존재
 * 		오라클 연결 / 브라우저 연결 / 파일 연결 => 라이브러리
 * 		System.out.println() => API => C
 * 		=> 조립 => 객체 지향 프로그램
 * 		=> 레고블록 => class
 * 		=> class는 1개의 기능만 수행 : 게시판 (메소드 기능 => 여러개 기능) => 컴포넌트 : 여러개 관리 => 컨테이너
 * 	--------------------------------------------------------------------------------------
 * 	=> 7장
 * 	클래스의 종류
 * 
 * 	일반 클래스
 * 		=> 일반 기능이 있는 클래스
 * 		=> 조립 => main()
 * 		=> 변수 설정 => 활용 : 메소드 / 초기화 : 생성자 => 초기화가 필요 없는 경우에는 생략
 * 		[접근지정어] [제어어] class ClassName
 * 		{
 * 			------------------------
 * 			변수 = 데이터 => 모든 프로그램은 데이터 관리 : 자바스크립트 (Vue, React)
 * 			=> 여러개 저장 : 인스턴스 변수 (new를 이용하여 따로 저장)
 * 			=> 한개 저장 : 정적 변수 (구분자는 static)
 * 			------------------------
 * 			생성자 => 없는 경우에는 컴파일러가 자동 추가
 * 			------------------------
 * 			메소드
 * 			=> 리턴형 : 요청 처리 결과값 => 한개만 사용 가능 (여러개 => 배열/클래스)
 * 			=> 매개 변수 : 사용자 요청값 => 여러개 사용이 가능
 * 			------------------------
 * 		}
 * 		제어어
 * 		=> static : 공통 기간
 * 		=> abstract : 추상 클래스
 * 		=> final : 절판 (더 이상 확장이 안되는 클래스)
 * 
 * 	추상 클래스
 * 		=> 재사용 => 설계 => 공통으로 사용되는 내용을 설계 => 개발 기간이 단축
 * 		설계 (요구 사항 분석) : 3개월
 * 		데이터베이스 설계 : 1개월
 * 		화면 UI : 1개월
 * 		------------------------
 * 		개발 구현 : 15일
 * 		------------------------ 재사용 (상속 : 변경할 내용이 있다, 포함 : 변경할 내용이 없다)
 * 		테스트 : 15일
 * 		배포 : 1개월
 * 
 * 	인터페이스
 * 
 * 	내부 클래스 => 네트워크, 게임
 * 		네트워크 => 접속을 받는 클래스 / 클라이언트 통신 => IP, PORT => 클래스와 클래스 간의 공통으로 사용되는 변수/메소드가 있는 경우
 */
public class 인터페이스_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
